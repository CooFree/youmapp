var decodeURI = function (str) {
  if (str) {
    return decodeURIComponent(str.toString());
  }
  return str;
}

var httpsURI = function (uri) {
  if (uri) {
    return uri.replace('http://', 'https://');
  }
  return uri;
}

var navigateUrl = function (rule, adlog) {
  var url;
  if (rule.name && rule.name.length > 0) {
    var ruleName = rule.name.toLowerCase();
    if (ruleName === 'productDetail'.toLowerCase()) {
      if (!adlog) {
        adlog = rule.location;
      }
      url = '../product/productDetail/productDetail?prod_id=' + rule.prod_id + (adlog && adlog.length > 0 ? '&adlog=' + adlog : '');
    }
    else if (ruleName === 'productList'.toLowerCase()) {
      url = '../product/productList/productList?prod_classid=' + rule.class_id + '&prod_brand=' + rule.brand;
    }
    else if (ruleName === 'productSearch'.toLowerCase()) {
      url = '../product/productSearch/productSearch?keyword=' + encodeURIComponent(rule.keyword);
    }
    else if (ruleName === 'vproductList'.toLowerCase()) {
      url = '../product/vproductList/vproductList?prod_classid=' + rule.class_id;
    }
    else if (ruleName === 'topicProductList'.toLowerCase()) {
      url = '../product/topicProductList/topicProductList?prod_classid=' + rule.class_id + '&prefer_id=' + rule.prefer_id;
    }
    else if (ruleName === 'scoreExchange'.toLowerCase()) {
      url = '../scoreExch/scoreExch?ticket_id=' + rule.ticket_activity_id;
    }
  }
  if (!url) {
    url = '../index/index';
  }
  return url;
}

var toFixed = function (num, fractionDigits) {
  if (num !== undefined) {
    var numberStr = num.toString();
    if (fractionDigits) {
      return parseFloat(numberStr).toFixed(fractionDigits);
    }
    else {
      return numberStr;
    }
  }
}

var indexOf=function(str1,str2){
if(str1&&str2)
{
return str1.indexOf(str2);
}
else{
return -1;
}
}

var strSubstr = function(str, item, dir){
  var inx = str.indexOf(item);
  var temp = '';
  if(dir === 1){
    temp = str.substring(0, inx);
  }else {
    temp = str.substring(inx + 1);
  }
  return temp;
}

module.exports = {
  decodeuri: decodeURI,
  httpsuri: httpsURI,
  navigateurl: navigateUrl,
  tofixed: toFixed,
  indexof:indexOf,
  substr: strSubstr
}